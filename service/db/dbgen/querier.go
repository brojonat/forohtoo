// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package dbgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountTransactionsByWallet(ctx context.Context, arg CountTransactionsByWalletParams) (int64, error)
	CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error)
	CreateWallet(ctx context.Context, arg CreateWalletParams) (Wallet, error)
	DeleteTransactionsOlderThan(ctx context.Context, blockTime pgtype.Timestamptz) error
	DeleteWallet(ctx context.Context, arg DeleteWalletParams) error
	GetLatestTransactionByWallet(ctx context.Context, arg GetLatestTransactionByWalletParams) (Transaction, error)
	GetTransaction(ctx context.Context, arg GetTransactionParams) (Transaction, error)
	GetTransactionSignaturesByWallet(ctx context.Context, arg GetTransactionSignaturesByWalletParams) ([]string, error)
	GetTransactionsSince(ctx context.Context, arg GetTransactionsSinceParams) ([]Transaction, error)
	GetWallet(ctx context.Context, arg GetWalletParams) (Wallet, error)
	ListActiveWallets(ctx context.Context) ([]Wallet, error)
	ListTransactionsByTimeRange(ctx context.Context, arg ListTransactionsByTimeRangeParams) ([]Transaction, error)
	ListTransactionsByWallet(ctx context.Context, arg ListTransactionsByWalletParams) ([]Transaction, error)
	ListTransactionsByWalletAndTimeRange(ctx context.Context, arg ListTransactionsByWalletAndTimeRangeParams) ([]Transaction, error)
	ListWallets(ctx context.Context) ([]Wallet, error)
	UpdateWalletPollInterval(ctx context.Context, arg UpdateWalletPollIntervalParams) (Wallet, error)
	UpdateWalletPollTime(ctx context.Context, arg UpdateWalletPollTimeParams) (Wallet, error)
	UpdateWalletStatus(ctx context.Context, arg UpdateWalletStatusParams) (Wallet, error)
	WalletExists(ctx context.Context, arg WalletExistsParams) (bool, error)
}

var _ Querier = (*Queries)(nil)
